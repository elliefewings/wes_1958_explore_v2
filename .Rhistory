graphics.off()
# Set root working folder
library(knitr)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
opts_knit$set(root.dir = "/scratch/medgen/users/eleanor/2015-16/WECARE_analysis/WECARE/")
#setwd("/scratch/medgen/users/eleanor/2015-16/WECARE_analysis/WECARE/")
# Time stamp
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Set root working folder
library(knitr)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
opts_knit$set(root.dir = "/scratch/medgen/users/eleanor/2015-16/WECARE_analysis/WECARE/")
#setwd("/scratch/medgen/users/eleanor/2015-16/WECARE_analysis/WECARE/")
# Time stamp
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Set root working folder
library(knitr)
library(dplyr)
library(stringr)
opts_knit$set(root.dir = "/scratch/medgen/users/eleanor/2015-16/WECARE_analysis/WECARE/")
#setwd("/scratch/medgen/users/eleanor/2015-16/WECARE_analysis/WECARE/")
# Time stamp
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Set root working folder
library(knitr)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
opts_knit$set(root.dir = "/scratch/medgen/users/eleanor/2015-16/WECARE_analysis/WECARE/")
#setwd("/scratch/medgen/users/eleanor/2015-16/WECARE_analysis/WECARE/")
load("/scratch/medgen/users/alexey/wecare_gwas/gwas_AL10Jul2014.RData")
CoI <- c(12, 14, 17)
select3 <- snpinfo3[snpinfo3$Chr %in% CoI,]
select4 <- snpinfo4[snpinfo4$Chr %in% CoI,]
selected <- rbind(select3, select4)
foxm1_L <- 2966847
foxm1_U <- 2986206
foxm1 <- selected[selected$Chr == 12 & selected$Position >= (foxm1_L - 100000) & selected$Position <= (foxm1_U + 100000),]
slc_L <- 72744791
slc_U <- 72765492
slc <- selected[selected$Chr == 17 & selected$Position >= (slc_L - 100000) & selected$Position <= (slc_U + 100000),]
prkd1_L <- 30045687
prkd1_U <- 30661104
prkd1 <- selected[selected$Chr == 14 & selected$Position >= (prkd1_L - 100000) & selected$Position <= (prkd1_U + 100000),]
rm(CoI, select3, select4, selected, foxm1_L, foxm1_U, slc_L, slc_U, prkd1_L, prkd1_U, snpinfo1, snpinfo2, snpinfo3, snpinfo4)
foxm1_rs <- as.vector(foxm1$snpname)
slc_rs <- as.vector(slc$snpname)
prkd1_rs <- as.vector(prkd1$snpname)
rsids <- c(foxm1_rs, slc_rs, prkd1_rs)
merged <- geno1[geno1$snpname %in% rsids,]
for (file in c(geno1, geno2, geno3, geno4)){
merged <- rbind(merged, file[file$rsids %in% rsids,])
}
for (file in c(geno1, geno2, geno3, geno4)){
merged <- rbind(merged, file[file$snpname %in% rsids,])
}
View(geno1)
# Time stamp
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Set root working folder
library(knitr)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
opts_knit$set(root.dir = "/scratch/medgen/users/eleanor/2015-16/WECARE_analysis/WECARE/")
#setwd("/scratch/medgen/users/eleanor/2015-16/WECARE_analysis/WECARE/")
kgen <- read.table("/scratch/medgen/users/eleanor/2015-16/1kgenomes_analysis/kgen_consq_filtered_20160404.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE)
kgen_high <- kgen[kgen$IMPACT == "HIGH",]
kgen_miss <- kgen[kgen$IMPACT == "MODERATE",]
kgen_del <- kgen_miss[grepl("deleterious", kgen_miss$SIFT_CODE) & grepl("probably_damaging", kgen_miss$PolyPhenCode),]
kgen_highdel <- rbind(kgen_high, kgen_del)
kgen_rare <- kgen_highdel[kgen_highdel$GMAF <= 0.05,]
goi <- c("RECQL", "FANCM")
genes <- kgen_rare[kgen_rare$SYMBOL %in% goi,]
View(genes)
pos <- c(21623281,
21624546,
21630874,
45606387,
45636336,
45644816,
45657064,
45665603)
pos_l <- pos-5
pos_h <- pos+5
var <- genes[genes$POS > pos_l &  genes$POS < pos_h,]
var <- genes[genes$POS %in% pos,]
View(var)
merge <- data.frame(header=col.names(genes))
merge <- data.frame(header=colnames(genes))
View(merge)
merge <- data.frame(colnames=colnames(genes))
View(merge)
colnames(genes)
merge <- data.frame(POS=NA)
View(merge)
for (coord in pos){
h <- coord +5
l <- coord -5
var <- genes[genes$POS > l &  genes$POS < h,]
merge <- rbind(merge, var)
}
colnames(merge) <- colnames(var)
merge <- var[0,]
View(merge)
for (coord in pos){
h <- coord +5
l <- coord -5
var <- genes[genes$POS > l &  genes$POS < h,]
merge <- rbind(merge, var)
}
View(merge)
View(var)
var_exact <- genes[genes$POS %in% pos,]
View(merge)
View(var_exact)
View(var_exact)
var_exact[,c(2,3,18)]
ped <- read.table("gast_Dec16_plink_source.ped", sep = "\t", stringsAsFactors = FALSE, colClasses = "character")
vv <- read.table("/scratch/medgen/users/eleanor/Pipeline_working_directory/exac/ExAC_nonTCGA.r0.3.1.sites.vep.filt.split.vcf.txt", header = TRUE, sep="\t")
View(vv)
# Time stamp
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Set root working folder
library(knitr)
library(plyr)
library(dplyr)
library(stringr)
library(tidyr)
files <- list()
key <- paste("loc", seq(1:50), sep="")
key <- paste("loc", seq(1:50), sep="")
files <- list()
for i in seq(1:300){
new <- data.frame(loci=sample(key,40), data=sample(seq(1:100), 40))
name(new) <- paste("file", i, sep="")
files <- c(files, new)
}
key <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- data.frame(loci=sample(key,40), data=sample(seq(1:100), 40))
name(new) <- paste("file", i, sep="")
files <- c(files, new)
}
key <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- data.frame(loci=sample(key,40), data=sample(seq(1:100), 40))
names(new) <- paste("file", i, sep="")
files <- c(files, new)
}
loci <- paste("loc", seq(1:50), sep="")
test <- merge(as.data.frame(loci, files, on="loci")
test <- merge(as.data.frame(loci, files, on="loci"))
test <- merge(as.data.frame(loci, files, on="loci"))
test <- merge(as.data.frame(loci), files, on="loci")
View(test)
View(new)
# Time stamp
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Set root working folder
library(knitr)
library(plyr)
library(dplyr)
library(stringr)
library(tidyr)
loci <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- data.frame(loci=sample(key,40), data=sample(seq(1:100), 40))
colnames(new) <- c("loci", "data")
names(new) <- paste("file", i, sep="")
files <- c(files, new)
}
#test <- merge(as.data.frame(loci), files, on="loci")
test <- merge(as.data.frame(loci), files, on="loci")
View(test)
loci <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- data.frame(loci=sample(loci,40), data=sample(seq(1:100), 40))
colnames(new) <- c("loci", "data")
names(new) <- paste("file", i, sep="")
files <- c(files, new)
}
test <- merge(as.data.frame(loci), files, on="loci")
View(test)
View(new)
new <- (loci=sample(loci,40), data=sample(seq(1:100), 40))
files.rn <- lapply(files, function(x) colnames(x) <- c("loci", "data"))
# Time stamp
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Set root working folder
library(knitr)
library(plyr)
library(dplyr)
library(stringr)
library(tidyr)
loci <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- as.data.frame(loci=sample(loci,40), data=sample(seq(1:100), 40))
names(new) <- c("loci", paste("data", i, sep=""))
files <- c(files, new)
}
loci <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- as.data.frame(loci=sample(loci,40), data=sample(seq(1:100), 40))
names(new) <- c("loci", paste("data", i, sep=""))
files <- c(files, new)
}
loci=sample(loci,40
)
data=sample(seq(1:100), 40)
# Time stamp
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Set root working folder
library(knitr)
library(plyr)
library(dplyr)
library(stringr)
library(tidyr)
loci <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- as.data.frame(loci=sample(loci,40), data=sample(seq(1:100), 40))
names(new) <- c("loci", paste("data", i, sep=""))
files <- c(files, new)
}
new <- as.data.frame(loci=sample(loci,40), data=sample(seq(1:100), 40))
loci=sample(loci,40)
data=sample(seq(1:100), 40)
test <- as.data.frame(loci, data)
View(test)
new <- data.frame(loci=sample(loci,40), data=sample(seq(1:100), 40))
# Time stamp
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Set root working folder
library(knitr)
library(plyr)
library(dplyr)
library(stringr)
library(tidyr)
loci <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- data.frame(loci=sample(loci,40), data=sample(seq(1:100), 40))
names(new) <- c("loci", paste("data", i, sep=""))
files <- c(files, new)
}
test <- merge(as.data.frame(loci), files, on="loci")
View(test)
as.data.frame(loci)
file <- as.data.frame(loci)
test <- lapply(files, function(x)
file <- merge(file, x, on="loci"))
file <- as.data.frame(loci)
file <- as.data.frame(merge(file, x, on="loci")))
test <- lapply(files, function(x) file <- as.data.frame(merge(file, x, on="loci")))
test2 <- Reduce(function(x, y) merge(x, y, on="loci"), files)
View(test2)
files[1]
View(new)
loci <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- data.frame(loci=as.character(sample(loci,40)), data=sample(seq(1:100), 40))
names(new) <- c("loci", paste("data", i, sep=""))
files <- c(files, new)
}
key <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- data.frame(loci=as.character(sample(loci,40)), data=sample(seq(1:100), 40))
names(new) <- c("loci", paste("data", i, sep=""))
files <- c(files, new)
}
key <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- data.frame(loci=as.character(sample(loci,40)), data=sample(seq(1:100), 40))
files <- c(files, new)
}
key <- paste("loc", seq(1:50), sep="")
files <- list()
for (i in seq(1:300)){
new <- data.frame(loci=as.character(sample(key,40)), data=sample(seq(1:100), 40))
files <- c(files, new)
}
test2 <- Reduce(function(x, y) merge(x, y, on="loci"), files)
View(test2)
count_gnom <- matrix(c(1, 2068, 311, 121068), nrow=2, byrow=TRUE)
fisher.test(count_gnom)[[1]]
count_kgen <- matrix(c(1, 22, 311, 2482), nrow=2, byrow=TRUE)
fisher.test(count_kgen)[[1]]
count_kgen <- matrix(c(5, 1, 307, 2503), nrow=2, byrow=TRUE)
fisher.test(count_kgen)[[1]]
View(count_gnom)
count_gnom <- matrix(c(5, 218, 307, 122918), nrow=2, byrow=TRUE)
fisher.test(count_gnom)[[1]]
count_kgen <- matrix(c(5, 1, 307, 2503), nrow=2, byrow=TRUE)
fisher.test(count_kgen)[[1]]
View(count_gnom)
View(count_kgen)
count_gnom <- matrix(c(1, 2068, 311, 121068), nrow=2, byrow=TRUE)
fisher.test(count_gnom)[[1]]
count_kgen <- matrix(c(1, 22, 311, 2482), nrow=2, byrow=TRUE)
fisher.test(count_kgen)[[1]]
View(count_gnom)
View(count_kgen)
m  <- matrix(c(6,169,2,20000), nrow=2)
View(m)
fisher.test(m)
m  <- matrix(c(6,161,2,(21002-161)), nrow=2)
m
fisher.test(m)
install.packages("ggplot2")
install.packages("gplots")
install.packages("reshape")
install.packages("kableExtra")
install.packages("plyr")
install.packages("kableExtra")
library(kableExtra)
rsconnect::deployApp("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_shiny_v2")
rsconnect::deployApp("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore/")
rsconnect::deployApp("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore/")
exac <- read.table("/scratch/medgen/users/eleanor/2015-16/Exac/ExAC_nonTCGA.r0.3.1.sites.vep.filt.split.vcf_v2_separated.txt", sep="\t", skip=1, stringsAsFactors = FALSE)
exac <- read.table("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/Exac/ExAC_nonTCGA.r0.3.1.sites.vep.filt.split.vcf_v2_separated.txt", sep="\t", skip=1, stringsAsFactors = FALSE)
csq.head <- c("CHROM",
"POS",
"REF",
"ALT",
"QUAL",
"FILTER",
"AC",
"AF",
"AN",
"Allele",
"Consequence",
"IMPACT",
"SYMBOL",
"Gene",
"Feature_type",
"Feature",
"BIOTYPE",
"EXON",
"INTRON",
"HGVSc",
"HGVSp",
"cDNA_position",
"CDS_position",
"Protein_position",
"Amino_acids",
"Codons",
"Existing_variation",
"ALLELE_NUM",
"DISTANCE",
"STRAND",
"VARIANT_CLASS",
"MINIMISED",
"SYMBOL_SOURCE",
"HGNC_ID",
"CANONICAL",
"TSL",
"CCDS",
"ENSP",
"SWISSPROT",
"TREMBL",
"UNIPARC",
"SIFT",
"PolyPhen",
"DOMAINS",
"HGVS_OFFSET",
"GMAF",
"AFR_MAF",
"AMR_MAF",
"ASN_MAF",
"EAS_MAF",
"EUR_MAF",
"SAS_MAF",
"AA_MAF",
"EA_MAF",
"CLIN_SIG",
"SOMATIC",
"PHENO",
"PUBMED",
"MOTIF_NAME",
"MOTIF_POS",
"HIGH_INF_POS",
"MOTIF_SCORE_CHANGE",
"LoF_info",
"LoF_flags",
"LoF_filter",
"LoF",
"context",
"ancestral")
colnames(exac) <- csq.head
nrow(exac)
colnames(exac) <- csq.head
#Number of variants before filtering on consequence
nrow(exac)
#Filter on consequence
high <- exac[exac$IMPACT == "HIGH",]
miss <- exac[exac$IMPACT == "MODERATE",]
del <- miss[(grepl("deleterious", miss$SIFT) & grepl("probably_damaging", miss$PolyPhen)) |
(is.na(miss$SIFT) & grepl("probably_damaging", miss$PolyPhen)) |
(grepl("deleterious", miss$SIFT) & is.na(miss$PolyPhen)) |
grepl("inframe", miss$Consequence),]
high_del <- rbind(high, del)
#Number of variants after filtering on consequence
nrow(high_del)
#Clean up
rm(exac, miss, high, del, csq.head)
high_del.split <- mutate(high_del, EUR_MAF=as.numeric(sapply(strsplit(as.character(high_del$EUR_MAF), ":"), `[`, 2)))
library(dplyr)
library(stringr)
library(sqldf)
library(knitr)
high_del.split <- mutate(high_del, EUR_MAF=as.numeric(sapply(strsplit(as.character(high_del$EUR_MAF), ":"), `[`, 2)))
View(high_del.split)
high_del.split <- mutate(high_del, AFR_MAF=as.numeric(sapply(strsplit(as.character(high_del$AFR_MAF), ":"), `[`, 2)),
AMR_MAF=as.numeric(sapply(strsplit(as.character(high_del$AMR_MAF), ":"), `[`, 2)),
ASN_MAF=as.numeric(sapply(strsplit(as.character(high_del$ASN_MAF), ":"), `[`, 2)),
EAS_MAF=as.numeric(sapply(strsplit(as.character(high_del$EAS_MAF), ":"), `[`, 2)),
EUR_MAF=as.numeric(sapply(strsplit(as.character(high_del$EUR_MAF), ":"), `[`, 2)),
SAS_MAF=as.numeric(sapply(strsplit(as.character(high_del$SAS_MAF), ":"), `[`, 2)),
AA_MAF=as.numeric(sapply(strsplit(as.character(high_del$AA_MAF), ":"), `[`, 2)),
EA_MAF=as.numeric(sapply(strsplit(as.character(high_del$EA_MAF), ":"), `[`, 2)))
View(high_del.split)
rm(high_del)
vv <- subset(high_del.split, select=c("CHROM", "POS", "REF", "ALT", "AC", "AF", "AN", "Consequence", "IMPACT", "SYMBOL", "cDNA_position", "CDS_position", "Protein_position", "Amino_acids", "Existing_variation", "SIFT", "PolyPhen", "AFR_MAF", "AMR_MAF", "ASN_MAF", "EAS_MAF", "EUR_MAF", "SAS_MAF", "AA_MAF", "EA_MAF", "CLIN_SIG"))
rm(high_del.split)
save.image("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v2/ExAC_nonTCGA_csqfiltered_short.Rdata")
View(vv)
sum(is.na(vv$AF))
vv <- vv[order(vv$CHROM, vv$POS),]
View(vv)
save.image("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v2/ExAC_nonTCGA_csqfiltered_short.Rdata")
shiny::runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v2')
shiny::runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v2')
rsconnect::deployApp("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v2/")
rsconnect::deployApp("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v2/")
test <- c(5, 8)
library(ggplot2)
shiny::runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
test <- data.frame(impact=c("LoF", "Missense"), count=c(5, 8), rare=c(2, 4), rare2=c(1,2))
View(test)
test2 <- melt(test, id=c("impact", "rarity"))
test2 <- melt(test)
View(test2)
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
library(ggplot2)
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
shiny::runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
rsconnect::deployApp("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3/")
rsconnect::deployApp("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3/")
test <- data.frame(impact=c("LoF", "Missense"), count=c(5, 8), rare=c(2, 4), rare2=c(1,2))
View(test)
test[test$rare >= 1,]
test[test$rare >= 3,]
shiny::runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3')
rsconnect::deployApp("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3/")
rsconnect::deployApp("/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/exac/ExAC_nonTCGA_tool/ExAC_nonTCGA_explore_v3/")
shiny::runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/wes_1958/wes_1958_explore_v2')
runApp('/rds/project/erf33/rds-erf33-medgen/users/eleanor/2015-16/R_scripts/wes_1958/wes_1958_explore_v2')
